/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package form;

import controller.Controller;
import domain.Manufacturer;
import domain.MeasurementUnit;
import domain.PoreskaStopa;
import domain.Product;
import domain.User;
import java.io.IOException;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import session.Session;

/**
 *
 * @author Korisnik
 */
public class FormNewProduct extends javax.swing.JDialog {

    private Controller controller;
    FormProductSearch formProductSearch;

    public FormNewProduct(FormProductSearch formProductSearch) {
        this.formProductSearch = formProductSearch;
    }

    /**
     * Creates new form FormNewProduct
     */
    public FormNewProduct(FMain form, boolean modal, FormMode formMode) {
        super(form, modal);
        initComponents();

        setLocationRelativeTo(null);

        fill();
               adjustMode(Session.getInstance().getFormMode());

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtID = new javax.swing.JTextField();
        txtName = new javax.swing.JTextField();
        txtQuantity = new javax.swing.JTextField();
        cbMeasurementUnit = new javax.swing.JComboBox<>();
        txtPriceWithoutVAT = new javax.swing.JTextField();
        btnSave = new javax.swing.JButton();
        btnEdit = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        cmbManufacturer = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        txtPriceWithVat = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("New Product");
        setBackground(new java.awt.Color(0, 0, 0));
        setForeground(new java.awt.Color(255, 0, 51));

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.MatteBorder(new javax.swing.ImageIcon(getClass().getResource("/form/pozadina.png"))), "New product", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(255, 0, 51))); // NOI18N
        jPanel2.setForeground(new java.awt.Color(255, 153, 153));
        jPanel2.setLayout(null);

        jLabel1.setText("ID:");
        jPanel2.add(jLabel1);
        jLabel1.setBounds(120, 150, 15, 14);

        jLabel2.setText("Name:");
        jPanel2.add(jLabel2);
        jLabel2.setBounds(120, 200, 70, 14);

        jLabel3.setText("Quantity:");
        jPanel2.add(jLabel3);
        jLabel3.setBounds(120, 250, 100, 14);

        jLabel4.setText("MeasurementUnit:");
        jPanel2.add(jLabel4);
        jLabel4.setBounds(120, 300, 110, 14);

        jLabel5.setText("Manufacturer: ");
        jPanel2.add(jLabel5);
        jLabel5.setBounds(120, 350, 100, 14);

        jLabel6.setText("Price without VAT:");
        jPanel2.add(jLabel6);
        jLabel6.setBounds(120, 390, 110, 14);
        jPanel2.add(txtID);
        txtID.setBounds(230, 150, 50, 20);
        jPanel2.add(txtName);
        txtName.setBounds(230, 200, 120, 20);
        jPanel2.add(txtQuantity);
        txtQuantity.setBounds(230, 250, 60, 20);

        jPanel2.add(cbMeasurementUnit);
        cbMeasurementUnit.setBounds(230, 300, 60, 20);

        txtPriceWithoutVAT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPriceWithoutVATActionPerformed(evt);
            }
        });
        jPanel2.add(txtPriceWithoutVAT);
        txtPriceWithoutVAT.setBounds(230, 390, 80, 20);

        btnSave.setText("Save");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });
        jPanel2.add(btnSave);
        btnSave.setBounds(340, 470, 100, 30);

        btnEdit.setText("Edit");
        btnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditActionPerformed(evt);
            }
        });
        jPanel2.add(btnEdit);
        btnEdit.setBounds(110, 470, 100, 30);

        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });
        jPanel2.add(btnDelete);
        btnDelete.setBounds(220, 470, 110, 30);

        jPanel2.add(cmbManufacturer);
        cmbManufacturer.setBounds(230, 350, 150, 20);

        jLabel7.setText("Price with VAT:");
        jPanel2.add(jLabel7);
        jLabel7.setBounds(120, 430, 100, 14);

        txtPriceWithVat.setEditable(false);
        jPanel2.add(txtPriceWithVat);
        txtPriceWithVat.setBounds(230, 430, 80, 20);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 560, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 510, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed

        String id = txtID.getText();
        String name = txtName.getText();
        int idProduct = Integer.parseInt(id);
        String quantity = txtQuantity.getText();
        int quanti = Integer.parseInt(quantity);
        
        if(quanti < 0){
            JOptionPane.showMessageDialog(this, "Quantity can not be bellow 0");
            return;
        }
        
        String price = txtPriceWithoutVAT.getText();
        double pricee = Double.parseDouble(price);

        String priceWith = txtPriceWithVat.getText();
        double priceWithVat = Double.parseDouble(priceWith);
        MeasurementUnit mu = (MeasurementUnit) cbMeasurementUnit.getSelectedItem();
        Manufacturer manu = (Manufacturer) cmbManufacturer.getSelectedItem();

        Product product = new Product(idProduct, name, quanti, mu, manu, priceWithVat, pricee);
        boolean delete;
        try {
            delete = Controller.getInstance().deleteProduct(product);
            if (delete == true) {
                JOptionPane.showMessageDialog(this, "Product delete");
                //formProductSearch.delete(product);
                this.dispose();

            } else {
                JOptionPane.showMessageDialog(this, "Product isn't delete");
            }
        } catch (IOException ex) {
            Logger.getLogger(FormNewProduct.class.getName()).log(Level.SEVERE, null, ex);
        } catch (Exception ex) {
            Logger.getLogger(FormNewProduct.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditActionPerformed
        txtName.setEditable(true);
        txtPriceWithoutVAT.setEditable(true);
        cmbManufacturer.setEditable(true);
        cbMeasurementUnit.setEditable(true);
        btnSave.setVisible(true);
        btnDelete.setVisible(true);
        btnEdit.setVisible(false);
    }//GEN-LAST:event_btnEditActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed

        String name = txtName.getText().trim();
        int quantity = Integer.parseInt(txtQuantity.getText());
        MeasurementUnit measurementUnit = (MeasurementUnit) cbMeasurementUnit.getSelectedItem();
        Manufacturer manufacturer = (Manufacturer) cmbManufacturer.getSelectedItem();
        double priceWithoutVAT = Double.parseDouble(txtPriceWithoutVAT.getText());

        String priceWithVat = txtPriceWithVat.getText();
        double priceWithVatt = Double.parseDouble(priceWithVat);

        Product product = new Product(-1, name, quantity, measurementUnit, manufacturer, priceWithoutVAT, priceWithVatt);
        try {
            product = Controller.getInstance().saveProduct(product);
            JOptionPane.showMessageDialog(this, "Product is saved with id: " + product.getID());
            
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Product isn't save ");
        }
        
        //formProductSearch.addProduct(product);
    }//GEN-LAST:event_btnSaveActionPerformed

    private void txtPriceWithoutVATActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPriceWithoutVATActionPerformed
        PoreskaStopa ps = new PoreskaStopa(0, "PDV", 0.20);
        String priceWithoutVat = txtPriceWithoutVAT.getText();
        int priceWithVat = Integer.parseInt(priceWithoutVat);
        txtPriceWithVat.setText(priceWithVat + (priceWithVat * ps.getAmount()) + "");
    }//GEN-LAST:event_txtPriceWithoutVATActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnEdit;
    private javax.swing.JButton btnSave;
    private javax.swing.JComboBox<MeasurementUnit> cbMeasurementUnit;
    private javax.swing.JComboBox<Manufacturer> cmbManufacturer;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JTextField txtID;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtPriceWithVat;
    private javax.swing.JTextField txtPriceWithoutVAT;
    private javax.swing.JTextField txtQuantity;
    // End of variables declaration//GEN-END:variables

    private void fill() {

        fillComboMeasurementUnit();

        try {
            fillManufacturer();
        } catch (Exception ex) {
            Logger.getLogger(FormNewProduct.class.getName()).log(Level.SEVERE, ex.getMessage(), ex);
        }
    }

    private void adjustMode(FormMode formMode) {

        if (formMode.equals(FormMode.NEW)) {

            btnDelete.setVisible(false);
            btnEdit.setVisible(false);

            txtID.setEnabled(false);

        } else if (formMode.equals(FormMode.VIEW)) {
            btnDelete.setVisible(false);

            btnSave.setVisible(false);
            btnEdit.setVisible(true);

            txtID.setEditable(false);
            txtQuantity.setEditable(false);
            
            txtName.setEditable(false);
            txtPriceWithoutVAT.setEditable(false);

            cmbManufacturer.setEditable(false);
            cbMeasurementUnit.setEditable(false);
        }

    }

  

    private void fillComboMeasurementUnit() {
        cbMeasurementUnit.removeAllItems();
        cbMeasurementUnit.addItem(MeasurementUnit.KG);
        cbMeasurementUnit.addItem(MeasurementUnit.L);
        cbMeasurementUnit.addItem(MeasurementUnit.PCS);
    }

    private void fillManufacturer() throws Exception {

        cmbManufacturer.removeAllItems();
        List<Manufacturer> manufacturers = Controller.getInstance().getAllManufacturer();
        for (Manufacturer manufacturer : manufacturers) {
            cmbManufacturer.addItem(manufacturer);
        }
    }

    void setProduct(Product product) {
        txtName.setText(product.getName());
        txtID.setText(product.getID() + "");
        txtQuantity.setText(product.getQuantity() + "");
        cmbManufacturer.setSelectedItem(product.getManufacturer());
        cbMeasurementUnit.setSelectedItem(product.getMeasurementUnit());
        txtPriceWithVat.setText(product.getPriceWithVat()+"");
        txtPriceWithoutVAT.setText(product.getPriceWithoutVAT() + "");
    }
}
